version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: synology-dashboard-db
    environment:
      POSTGRES_USER: dashboard
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dashboard123}
      POSTGRES_DB: synology_dashboard
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dashboard"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: synology-dashboard-redis
    command: redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
    volumes:
      - ./data/redis:/data
    ports:
      - "6381:6379"
    restart: unless-stopped
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    image: ghcr.io/egdongan/synology-server-dashboard/backend:latest
    container_name: synology-dashboard-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://dashboard:${DB_PASSWORD:-dashboard123}@postgres:5432/synology_dashboard
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL:-}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-1000}
      VALID_API_KEYS: ${VALID_API_KEYS:-}
    volumes:
      - ./data/logs:/app/logs
      - ./data/uploads:/app/uploads
    ports:
      - "3001:3000"
    restart: unless-stopped
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: ghcr.io/egdongan/synology-server-dashboard/frontend:latest
    container_name: synology-dashboard-frontend
    depends_on:
      - backend
    environment:
      VITE_API_URL: http://${VM_IP:-localhost}:3001
      VITE_WS_URL: ws://${VM_IP:-localhost}:3001
    ports:
      - "3000:80"
    restart: unless-stopped
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: synology-dashboard-nginx
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./data/nginx-logs:/var/log/nginx
    ports:
      - "8080:80"
    restart: unless-stopped
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  dashboard-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
