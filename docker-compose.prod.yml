version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    container_name: synology-dashboard-db-prod
    environment:
      POSTGRES_USER: dashboard
      POSTGRES_PASSWORD: dashboard123
      POSTGRES_DB: synology_dashboard
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    networks:
      - synology-network

  redis:
    image: redis:7-alpine
    container_name: synology-dashboard-redis-prod
    command: redis-server --appendonly yes
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - synology-network

  backend:
    image: ghcr.io/egdongan/synology-backend:latest
    container_name: synology-dashboard-backend-prod
    depends_on:
      - postgres
      - redis
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://dashboard:dashboard123@postgres:5432/synology_dashboard
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_URL: redis://redis:6379
      JWT_SECRET: production-jwt-secret-key-32-chars
      JWT_REFRESH_SECRET: production-refresh-secret-key-32-chars
      ENCRYPTION_KEY: 0123456789abcdef0123456789abcdef
      SESSION_SECRET: production-session-secret-key-32-chars
      PORT: 3003
    ports:
      - "3003:3003"
    restart: unless-stopped
    networks:
      - synology-network

  frontend:
    image: ghcr.io/egdongan/synology-frontend:latest
    container_name: synology-dashboard-frontend-prod
    depends_on:
      - backend
    ports:
      - "8082:80"
    restart: unless-stopped
    networks:
      - synology-network

volumes:
  postgres_data:
  redis_data:

networks:
  synology-network:
    driver: bridge